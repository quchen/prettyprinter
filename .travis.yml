# Use new container infrastructure to enable caching
sudo: false

# Choose a lightweight base image; we provide our own build tools.
language: c

branches:
    only:
        - master

# GHC depends on GMP. You can add other dependencies here as well.
addons:
    apt:
        packages:
            - libgmp-dev

env:
    - >
      STACK_RESOLVER="--resolver nightly"
      RUN_TESTSUITE=true
      RUN_RELEASE_CHECKS=true
      BUILD_SOURCE_DIST=true
      ALLOW_FAILURE=true
      CLEAR_STACK_CACHE=true

    - >
      STACK_RESOLVER="--resolver lts"
      RUN_TESTSUITE=true
      RUN_RELEASE_CHECKS=true
      BUILD_SOURCE_DIST=true

    # LTS 13 uses GHC 8.6
    - >
      STACK_RESOLVER="--resolver lts-13"
      RUN_TESTSUITE=true
      RUN_RELEASE_CHECKS=true
      BUILD_BENCHMARKS=true
      BUILD_SOURCE_DIST=true

    # LTS 12 uses GHC 8.4
    - >
      STACK_RESOLVER="--resolver lts-12"
      RUN_RELEASE_CHECKS=true

    # LTS 10 and 11 uses GHC 8.2
    - >
      STACK_RESOLVER="--resolver lts-10"

    # LTS 7 to 9 use GHC 8.0.{1,2}
    - >
      STACK_RESOLVER="--resolver lts-9 --stack-yaml stack-older-snapshots.yaml"

    # LTS 3 to 6 use GHC 7.10.{2,3}
    - >
      STACK_RESOLVER="--resolver lts-6 --stack-yaml stack-older-snapshots.yaml"

    # LTS 1 and 2 use GHC 7.8.4
    - >
      STACK_VERSION="1.9.1"
      STACK_RESOLVER="--resolver lts-2 --stack-yaml stack-older-snapshots.yaml"

matrix:
    fast_finish: true
    allow_failures:
        - env: ALLOW_FAILURE=true

before_install:
    - export PATH="$HOME/.local/bin:$HOME/.stack/bin:$PATH"
    - travis_retry scripts/ci/install/stack
    - stack $STACK_RESOLVER --no-terminal setup
    - |
      if "${RUN_RELEASE_CHECKS:-false}"; then
          ./scripts/ci/install/hlint
      fi

script:
    - |
      _stack() {
          if [[ $# -ge 1 ]] && [[ $1 == --travis_wait ]]; then
              shift
              travis_wait stack $STACK_RESOLVER --no-terminal "$@" ${STACK_BUILD_ARGS:-""}
          else
              stack $STACK_RESOLVER --no-terminal "$@" ${STACK_BUILD_ARGS:-""}
          fi
      }
    - _stack --travis_wait build
    - |
      if "${RUN_TESTSUITE:-false}"; then
          # -j1 to work around https://github.com/commercialhaskell/stack/issues/5159.
          _stack --travis_wait test -j1 && _stack --travis_wait haddock --no-haddock-deps
      fi
    - |
      if "${BUILD_BENCHMARKS:-false}"; then
          _stack --travis_wait bench --no-run-benchmarks
      fi
    - |
      if "${BUILD_SOURCE_DIST:-false}"; then
          stack sdist
      fi
    - |
      if "${RUN_RELEASE_CHECKS:-false}"; then
          for check in scripts/ci/checks/*; do
              echo "Running check: $(basename "$check")"
              "./$check"
          done
      fi

before_cache:
    - |
      if "${CLEAR_STACK_CACHE:-false}"; then
          rm -rf $HOME/.stack
      fi

cache:
    directories:
        - $HOME/.stack
